@model List<Pet>

@{

    Layout = "~/Views/Shared/_PetManager.cshtml";
}

<style>
    .container {
        max-width: 400rem;
        margin-left: 0px;
        padding: 0 15px;
    }

        .container h1 {
            font-size: 2rem;
            color: #00291C;
        }

        /* Change table header color */
        .container table thead {
            background-color: #687451; /* Header color */
        }

    /* Increase font size for the card numbers */
    .card-text {
        font-size: 2.5rem; /* Adjust as needed */
        font-weight: bold;
    }

    /* Color icons black */
    .card i {
        color: black;
        font-size: 2.5rem;
    }

    .card-body h5 {
        font-size: 1.5rem;
    }

    .card-text h2 {
        font-size: 1.5rem;
    }
</style>

<div class="container mt-10">
    <h1 class="text-start mb-4">Pet Details</h1>

    <!-- Cards Section -->
    <div class="row text-center mb-4">
        <div class="col-md-4">
            <div class="card bg-light border-0 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Total Pets</h5>
                    <h2 class="card-text">@ViewData["TotalPets"]</h2>
                    <i class="fa-solid fa-paw"></i>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-light border-0 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Adopted Pets</h5>
                    <h2 class="card-text">@ViewData["AdoptedPets"]</h2>
                    <i class="bi bi-house-heart"></i>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-light border-0 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Accounts</h5>
                    <h2 class="card-text">@ViewData["TotalAccounts"]</h2>
                    <i class="fa-solid fa-users"></i>
                </div>
            </div>
        </div>
    </div>

    <div class="container mt-10">
        <h1 class="text-start mb-4">Adoptees Table</h1>

        <!-- Filter & Search Section -->
        <div class="row mb-4">
            <div class="col-6">
                <!-- Filter Buttons -->
                <div class="btn-group" role="group" aria-label="Filter Bar">
                    <button class="btn btn-dark filter-button active" data-filter="all" onclick="filterPets('all')">All</button>
                    <button class="btn btn-dark filter-button" data-filter="dog" onclick="filterPets('dog')">Dog</button>
                    <button class="btn btn-dark filter-button" data-filter="cat" onclick="filterPets('cat')">Cat</button>
                    <button class="btn btn-dark filter-button" data-filter="vaccinated" onclick="filterPets('vaccinated')">Vaccinated</button>
                </div>
            </div>

            <div class="col-6">
                <!-- Search Bar -->
                <div class="float-end d-flex">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search pets by name..." onkeyup="searchPets()" style="border: 1px solid #00291C; border-radius: 15px 0px 0px 15px; width: 200px;">
                    <button class="btn text-white" style="background-color: #00291C; border: none; border-radius: 0px 15px 15px 0px;">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>
        </div>

        <!-- Table Section -->
        <div class="row">
            <div class="col-12">
                <table class="table table-striped text-center">
                    <thead>
                        <tr>
                            <th scope="col" class="fs-4 fw-bold">Pet Name</th>
                            <th scope="col" class="fs-4 fw-bold">Sex</th>
                            <th scope="col" class="fs-4 fw-bold">Pet Color</th>
                            <th scope="col" class="fs-4 fw-bold">Vaccinated</th>
                            <th scope="col" class="fs-4 fw-bold">Temperament</th>
                            <th scope="col" class="fs-4 fw-bold">Species</th>
                            <th scope="col" class="fs-4 fw-bold">Pet Image</th>
                        </tr>
                    </thead>
                    <tbody id="petTableBody">
                        @foreach (var pet in Model)
                        {
                            <tr class="pet-row" data-species="@pet.Species.ToLower()" data-name="@pet.Name.ToLower()" data-vaccinated="@pet.Vaccinated">
                                <td>@pet.Name</td>
                                <td>@pet.Age</td>
                                <td>@pet.Color</td>
                                <td>@(pet.Vaccinated ? "Yes" : "No")</td>
                                <td>@pet.Temperament</td>
                                <td>@pet.Species</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(pet.PhotoPath))
                                    {
                                        <img src="@pet.PhotoPath" class="img-thumbnail" alt="Pet Image" width="50">
                                    }
                                    else
                                    {
                                        <img src="https://via.placeholder.com/50" class="img-thumbnail" alt="No Image">
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    function filterPets(filter) {
        // Remove active class from all filter buttons
        document.querySelectorAll('.filter-button').forEach(button => {
            button.classList.remove('active');
        });

        // Add active class to clicked button
        document.querySelector(`[data-filter="${filter}"]`).classList.add('active');

        // Get all pet rows
        let pets = document.querySelectorAll('.pet-row');

        // Show or hide pets based on filter
        pets.forEach(pet => {
            let petSpecies = pet.getAttribute('data-species');
            let isVaccinated = pet.getAttribute('data-vaccinated');

            if (filter === "all" ||
                petSpecies === filter ||
                (filter === "vaccinated" && isVaccinated === "True")) {
                pet.style.display = "";
            } else {
                pet.style.display = "none";
            }
        });

        // Apply search filter after species filter
        searchPets();
    }

    function searchPets() {
        let searchQuery = document.getElementById("searchInput").value.toLowerCase();
        let pets = document.querySelectorAll('.pet-row');

        pets.forEach(pet => {
            let petName = pet.getAttribute('data-name');

            // Only show pet if name matches search and it's not hidden by species filter
            if (petName.includes(searchQuery) && pet.style.display !== "none") {
                pet.style.display = "";
            } else {
                pet.style.display = "none";
            }
        });
    }

    // Default filter to 'All' on page load
    document.addEventListener("DOMContentLoaded", function () {
        filterPets('all');
    });
</script>
